TARGET := retroarch_nx

DEBUG                  ?= 0
GRIFFIN_BUILD           = 0
WHOLE_ARCHIVE_LINK      = 0

OBJ :=

DEFINES := -DSWITCH=1 -U__linux__ -U__linux

ifeq ($(GRIFFIN_BUILD), 1)
	OBJ += griffin/griffin.o
	DEFINES += -DHAVE_GRIFFIN=1 -DHAVE_NEON -DHAVE_MATERIALUI -DHAVE_LIBRETRODB -DHAVE_CC_RESAMPLER
	DEFINES += -DHAVE_ZLIB -DHAVE_RPNG -DHAVE_RJPEG -DHAVE_RBMP -DHAVE_RTGA -DWANT_ZLIB
else
	HAVE_CC_RESAMPLER = 1
	HAVE_MENU_COMMON = 1
	HAVE_RTGA = 1
	HAVE_RPNG = 1
	HAVE_RJPEG = 1
	HAVE_RBMP = 1
	HAVE_RGUI = 1
	HAVE_ZLIB = 1
	HAVE_BUILTINZLIB = 1
	HAVE_LIBRETRODB = 1
	HAVE_ZARCH = 0
	HAVE_MATERIALUI = 0 # enable later?
	HAVE_XMB = 0
	HAVE_STATIC_VIDEO_FILTERS = 1
	HAVE_STATIC_AUDIO_FILTERS = 1
	HAVE_MENU = 1

	include Makefile.common
        BLACKLIST :=
	BLACKLIST += input/input_overlay.o
        BLACKLIST += tasks/task_overlay.o
	OBJ := $(filter-out $(BLACKLIST),$(OBJ))
endif

ifeq ($(strip $(DEVKITPRO)),)
    $(error "Please set DEVKITPRO in your environment. export DEVKITPRO=<path to>devkitpro")
endif

ifeq ($(strip $(NXLIB)),)
	NXLIB = $(DEVKITPRO)/libnx
endif

TOPDIR ?= $(CURDIR)
include $(DEVKITPRO)/libnx/switch_rules

APP_TITLE         := $(shell echo "$(APP_TITLE)" | cut -c1-128)
APP_DESCRIPTION   := $(shell echo "$(APP_DESCRIPTION)" | cut -c1-256)
APP_AUTHOR        := $(shell echo "$(APP_AUTHOR)" | cut -c1-128)
APP_PRODUCT_CODE  := $(shell echo $(APP_PRODUCT_CODE) | cut -c1-16)
APP_UNIQUE_ID     := $(shell echo $(APP_UNIQUE_ID) | cut -c1-7)

INCDIRS := -I$(NXLIB)/include -I. -Ideps/libz -Ilibretro-common/include -Ideps/stb 
LIBDIRS := -L. -L$(NXLIB)/lib

ARCH	:=	-march=armv8-a -mtune=cortex-a57 -mtp=soft -fPIE

CFLAGS	:=	-g -Wall -O2 -ffunction-sections \
			$(ARCH) $(DEFINES)

CFLAGS	+=	$(INCLUDE) -DSWITCH

CXXFLAGS	:= $(CFLAGS) -fno-rtti -fno-exceptions -std=gnu++11

ASFLAGS	:=	-g $(ARCH)
LDFLAGS	=	-specs=$(DEVKITPRO)/libnx/switch.specs -g $(ARCH) -Wl,-Map,$(notdir $*.map) $(LIBDIRS)

LIBS	:= -lnx

#---------------------------------------------------------------------------------
# use CXX for linking C++ projects, CC for standard C
#---------------------------------------------------------------------------------
ifeq ($(strip $(CPPFILES)),)
#---------------------------------------------------------------------------------
	export LD	:=	$(CC)
#---------------------------------------------------------------------------------
else
#---------------------------------------------------------------------------------
	export LD	:=	$(CXX)
#---------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------




TARGETS := $(TARGET).nro


all: $(TARGETS)

$(TARGET).nro.so: $(OBJ) libretro_switch.a fs.squashfs.o $(LIBTRANSISTOR_NRO_LIB) $(LIBTRANSISTOR_COMMON_LIBS)
	$(LD) $(LD_FLAGS) --allow-multiple-definition -o $@ $(OBJ) libretro_switch.a fs.squashfs.o $(LIBTRANSISTOR_NRO_LDFLAGS) -lm

%.squashfs.o: %.squashfs
	$(LD) -s -r -b binary -m aarch64elf -T $(LIBTRANSISTOR_HOME)/fs.T -o $@ $<

fs.squashfs: fs/*
	mksquashfs $^ $@ -comp lz4 -nopad -noappend

clean:
	rm -f $(OBJ) $(TARGET).nro.so $(TARGET).nro

.PHONY: clean
